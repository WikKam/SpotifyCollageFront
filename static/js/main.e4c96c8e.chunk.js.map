{"version":3,"sources":["components/SelectorContainer/SelectorContainer.module.css","App.module.css","components/Button/Button.module.css","components/Logo/Logo.module.css","images/Spotify_Logo_RGB_Green.png","fonts/iCiel Gotham-Medium.ttf","components/Button/Button.tsx","components/Logo/Logo.tsx","components/TypeSelector/TypeSelector.tsx","api/index.tsx","components/SelectorContainer/SelectorContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AuthButton","props","link","onClick","className","styles","button","href","children","Logo","title","alt","logo","src","inputTheme","createMuiTheme","overrides","MuiInputLabel","root","color","fontFamily","TypeSelector","classes","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","select","borderColor","icon","fill","disabled","label","menu","backgroundColor","textAlign","useStyles","useState","type","setType","container","FormControl","ThemeProvider","InputLabel","id","Select","labelId","value","onChange","event","callback","target","MenuProps","paper","inputProps","api","fetchData","path","token","a","isImage","fetch","headers","redirect","response","ok","status","blob","json","data","console","log","createStyles","minHeight","outline","position","boxShadow","shadows","display","padding","loader","SelectorContainer","imagePlaceholder","CircularProgress","isTimeDisabled","setIsTimeDisabled","isPlaylistDisabled","setIsPlaylistDisabled","size","setSize","playlist","setPlaylist","time","setTime","loaded","setLoaded","open","setOpen","image","setImage","getImage","url","handleClose","createUrl","base","selectorCallback","func","MenuItem","playlists","map","key","buttonContainer","Button","then","result","alert","window","location","reload","img","URL","createObjectURL","collage","Modal","onClose","style","top","left","transform","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","App","setToken","setPlaylists","useEffect","mounted","_token","name","description","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e4c96c8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SelectorContainer_container__DlK0N\",\"buttonContainer\":\"SelectorContainer_buttonContainer__2mZfj\",\"collage\":\"SelectorContainer_collage__2bgTl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__ysKGO\",\"App-logo\":\"App_App-logo__2LG3B\",\"App-logo-spin\":\"App_App-logo-spin__Aywya\",\"App-header\":\"App_App-header__-_vIm\",\"App-link\":\"App_App-link__or5j8\",\"title\":\"App_title__2MQGa\",\"description\":\"App_description__3lPP5\",\"logo\":\"App_logo__3dKvc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__wDjBz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Logo_title__3czoP\",\"logo\":\"Logo_logo__2_Bp_\"};","module.exports = __webpack_public_path__ + \"static/media/Spotify_Logo_RGB_Green.11dc437a.png\";","module.exports = __webpack_public_path__ + \"static/media/iCiel Gotham-Medium.022af2f6.ttf\";","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\n\r\nconst AuthButton = (props) => {\r\n\r\n\r\n    return(<div>{props.link &&\r\n        <a\r\n         onClick = {props.onClick}\r\n        className = {styles.button} \r\n        href = {props.href}>{props.children}\r\n        </a>}\r\n        {props.button && \r\n            <button\r\n             onClick = {props.onClick}\r\n            className = {styles.button} \r\n            >{props.children}\r\n            </button>}\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default AuthButton;","import React from 'react';\r\nimport styles from './Logo.module.css';\r\n\r\nconst Logo = (props) => {\r\n\r\n    return (\r\n    <div className = {styles.title}>\r\n        <img alt = 'spotify-logo' className = {styles.logo} src={props.src}/>\r\n        <h1>{props.children}</h1>\r\n    </div>)\r\n}\r\n\r\nexport default Logo","import React, {useState} from \"react\";\r\nimport styles from \"./TypeSelector.module.css\";\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { createMuiTheme, ThemeProvider} from '@material-ui/core';\r\n\r\n export const inputTheme = createMuiTheme({\r\n    overrides: {\r\n      MuiInputLabel: { // Name of the component ⚛️ / style sheet\r\n        root: { // Name of the rule\r\n          color: \"orange\",\r\n          fontFamily: 'GothamMedium',\r\n          \"&$focused\": { // increase the specificity for the pseudo class\r\n            color: \"#1DB954\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\nconst TypeSelector = (props) =>{\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 140,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    select: {\r\n        '&:before': {\r\n            borderColor: '#1DB954',\r\n        },\r\n        '&:after': {\r\n            borderColor: '#1DB954',\r\n        },\r\n        color: 'white', \r\n        fontFamily: 'GothamMedium',\r\n\r\n    },\r\n    icon: {\r\n        fill: props.disabled ? 'gray' : 'white',\r\n    },\r\n    label: {\r\n        color: props.disabled ? 'gray' : 'white',\r\n        fontFamily: 'GothamMedium',\r\n        '&:active':{\r\n            color: '#1DB954'\r\n        },\r\n        '&:before' : {\r\n            color: '#1DB954',\r\n        },\r\n        '&:after' : {\r\n            color: '#1DB954',\r\n        },\r\n    },\r\n    menu: {\r\n        \"& ul\": {\r\n            backgroundColor: \"#4e4b4a\",\r\n        },\r\n        \"& li\":{\r\n            color: 'white',\r\n            textAlign: 'left',\r\n            fontFamily: 'GothamMedium',\r\n        },\r\n\r\n        \"& li:disabled\": {\r\n            color: 'gray'\r\n        },\r\n    }\r\n  }));\r\n  \r\n    const classes = useStyles();\r\n    const [type, setType] = useState('');\r\n\r\n    const typeHandler = (event) => {\r\n        if(props.callback){\r\n            props.callback(event);\r\n        }\r\n        setType(event.target.value);\r\n    }\r\n\r\n    return(\r\n    <div className = {styles.container}>\r\n        <FormControl className = {classes.formControl}>\r\n            <ThemeProvider theme = {inputTheme}>\r\n    <InputLabel className = {classes.label} id = {`${props.type}-select-label`}>{props.title}</InputLabel>\r\n            </ThemeProvider>\r\n            <Select\r\n            className = {classes.select}\r\n            labelId = {`${props.type}-select-label`}\r\n            id = {`${props.type}-select`}\r\n            value = {type}\r\n            onChange = {typeHandler}\r\n            MenuProps = {{\r\n                classes: {\r\n                    paper: classes.menu\r\n                }\r\n            }}\r\n            inputProps = {{\r\n                classes: {\r\n                    icon: classes.icon,\r\n                }\r\n            }}\r\n            disabled = {props.disabled}\r\n            >\r\n                {props.children}\r\n            </Select>\r\n        </FormControl>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default TypeSelector;","const api = \"https://spotify-collage.herokuapp.com\";\r\n\r\n\r\nconst fetchData = async (path, token, isImage=false) => {\r\n    const response = await fetch(api + path,{\r\n    headers: {\r\n      'Authorization': 'Bearer ' + token,\r\n      'Access-Control-Allow-Origin': '*'\r\n    },\r\n    redirect: \"follow\",\r\n    })\r\n    if(!response.ok){\r\n      if(response.status === 401){\r\n        return 'unauthorised';\r\n      }\r\n      else return 'error';\r\n    }\r\n    const data = isImage? await response.blob() : await response.json();\r\n    console.log(data);\r\n    return data;\r\n}\r\n\r\nexport default fetchData;","import React, {useState} from 'react';\r\nimport styles from './SelectorContainer.module.css';\r\nimport { MenuItem, Modal, CircularProgress } from '@material-ui/core';\r\nimport {TypeSelector} from '../index';\r\nimport {Button} from '../index';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport fetchData from '../../api/index';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      textAlign: \"center\" as const,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      paper: {\r\n        minWidth: 500,\r\n        minHeight: 500,\r\n        outline: 0,\r\n        position: 'absolute',\r\n        backgroundColor: \"#4e4b4a\",\r\n        boxShadow: theme.shadows[5],\r\n        display: 'block',\r\n        margin: 'auto',\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n      loader: {\r\n          borderColor: '#1DB954',\r\n          color: '#1DB954',\r\n          minHeight: 200,\r\n          minWidth: 200,\r\n          marginTop: '25%'\r\n      }\r\n    }),\r\n  );\r\n\r\n\r\nconst SelectorContainer = (props) => {\r\n    const classes = useStyles();\r\n    const imagePlaceholder = <CircularProgress className = {classes.loader} />\r\n    const [isTimeDisabled, setIsTimeDisabled] = useState(true);\r\n    const [isPlaylistDisabled, setIsPlaylistDisabled] = useState(true);\r\n    const [type, setType] = useState(null);\r\n    const [size, setSize] = useState(null);\r\n    const [playlist, setPlaylist] = useState(null);\r\n    const [time, setTime] = useState(null);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [image, setImage] = useState(imagePlaceholder);\r\n    const handleOpen = () => {\r\n        const url = createUrl();\r\n        console.log(url);\r\n        if(url == 'error'){\r\n            alert('Please select all parameters and try again!');\r\n            return;\r\n        }\r\n        setOpen(true);\r\n        getImage(url).then(result => {\r\n            if(result == 'error'){\r\n                alert('Something went wrong. Refreshingn page...');\r\n                window.location.reload();\r\n                return;\r\n            }\r\n            if(result == 'unauthorised'){\r\n                alert('Auth Token expired. Refreshingn page to acquire a new one...');\r\n                window.location.reload();\r\n                return;\r\n              }\r\n            console.log(result);\r\n            let img = URL.createObjectURL(result);\r\n            console.log(img);\r\n            setImage(<img className = {styles.collage} alt = 'collage' src = {img}/>);\r\n            setLoaded(true);\r\n        })\r\n    }\r\n\r\n    const getImage = (url) => fetchData(url, props.token, true);\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setImage(imagePlaceholder);\r\n        setLoaded(false);\r\n    }\r\n    const typeSelectorCallback = (event) => {\r\n        setType(event.target.value);\r\n        if(event.target.value === 'top-artists' || event.target.value === 'top-tracks'){\r\n            setIsTimeDisabled(false);\r\n            setIsPlaylistDisabled(true);\r\n        }\r\n        else if(event.target.value === 'playlists'){\r\n            setIsTimeDisabled(true);\r\n            setIsPlaylistDisabled(false);\r\n        }\r\n        else{\r\n            setIsTimeDisabled(true);\r\n            setIsPlaylistDisabled(true);\r\n        }\r\n    }\r\n\r\n    const createUrl = () => {\r\n        let base = '';\r\n        if(type && size){\r\n            base += '/user/' + type;\r\n            if(type == 'recently-played'){\r\n                base += '/images';\r\n                base += '?size=' + size;\r\n                return base;\r\n            }\r\n            if(type == 'playlists' && playlist){\r\n                base += '/' + playlist + '/images';\r\n                base += '?size=' + size;\r\n                return base;\r\n            }\r\n            else if(time){\r\n                base += '/images';\r\n                base += '?time_range=' + time + '&size=' + size;\r\n                return base;\r\n            }\r\n        }\r\n        return 'error';\r\n\r\n    }\r\n\r\n    const selectorCallback = (event, func) =>{\r\n        func(event.target.value);\r\n    }\r\n    return (\r\n        <div>\r\n        <div className = {styles.container}>\r\n        <TypeSelector callback = {typeSelectorCallback} title = \"Collage Type\">\r\n                <MenuItem value = {'recently-played'}>Recently Played Tracks (50)</MenuItem>\r\n                <MenuItem value = {'top-artists'}>Top Artists</MenuItem>\r\n                <MenuItem value = {'top-tracks'}>Top Tracks</MenuItem>\r\n                <MenuItem value = {'playlists'}>Playlist</MenuItem>\r\n        </TypeSelector>\r\n        <TypeSelector callback = {(event) => selectorCallback(event, setSize)} title = \"Size\">\r\n                <MenuItem value = {2}>2x2</MenuItem>\r\n                <MenuItem value = {3}>3x3</MenuItem>\r\n                <MenuItem value = {4}>4x4</MenuItem>\r\n                <MenuItem value = {5}>5x5</MenuItem>\r\n                <MenuItem value = {6}>6x6</MenuItem>\r\n        </TypeSelector>\r\n        <TypeSelector callback = {(event) => selectorCallback(event, setTime)} disabled = {isTimeDisabled} title = \"Time Span\">\r\n                <MenuItem value = {'short_term'}>Short (~4 weeks)</MenuItem>\r\n                <MenuItem value = {'medium_term'}>Medium (~6 months)</MenuItem>\r\n                <MenuItem value = {'long_term'}>Long (several years)</MenuItem>\r\n        </TypeSelector>\r\n        <TypeSelector callback = {(event) => selectorCallback(event, setPlaylist)} disabled = {isPlaylistDisabled} title = \"Playlist Name\">\r\n                {props.playlists&&props.playlists.map(playlist => \r\n                <MenuItem key = {playlist}\r\n                value = {playlist}>\r\n                    {playlist}\r\n                </MenuItem>)}\r\n        </TypeSelector>\r\n        </div>\r\n        <div className = {styles.buttonContainer}>\r\n        <Button onClick = {handleOpen} button>Generate Collage</Button>\r\n        <Modal\r\n            open = {open}\r\n            onClose = {handleClose}\r\n            >\r\n            <div style = {getModalStyle()} className = {classes.paper}>{image}\r\n                    \r\n            <div className = {styles.buttonContainer}>\r\n                {loaded&&<Button onClick = {handleClose} button>Close</Button>}\r\n            </div>\r\n            </div>\r\n        </Modal>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectorContainer","import React, {useState, useEffect} from 'react';\nimport styles from './App.module.css';\nimport logo from './images/Spotify_Logo_RGB_Green.png';\nimport {Button, Logo, SelectorContainer} from './components/index'; \nimport fetchData from './api/index';\n\n\nconst oauthEndpoint = \"https://accounts.spotify.com/authorize\";\nconst clientId = \"e34dc5d417494fb6be8b663a9631b502\";\nconst redirectUri = \"https://wikkam.github.io/SpotifyCollageFront\";\nconst scopes = \"user-read-private user-read-email playlist-read-private playlist-read-collaborative user-read-recently-played user-top-read\"\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\nfunction App() {\n\n  const [token, setToken] = useState(null);\n  const [playlists, setPlaylists] = useState(null);\n  useEffect(() => {\n    let mounted = true;\n    console.log(hash);\n    let _token:string = hash[\"access_token\"];\n    if(_token){\n      setToken(_token);\n      fetchData('/user/playlists', _token).then(data => {\n        if(mounted){\n          console.log('data fetched');\n          if(data == 'error' || data == 'unauthorised'){\n            alert('Something went wrong. Refreshingn page...');\n            window.location.reload();\n            return;\n          }\n          setPlaylists(data.map(playlist => playlist.name));\n        }\n      })\n    }\n    return () => {mounted = false};    \n  },[])\n  return (\n    <div className={styles.App}>\n      <Logo src = {logo}>Collage Generator</Logo>\n        <p className = {styles.description}>Our generator uses your recently played songs, top tracks, artists and even playlists to create a collage which you can share with your friends!\n        </p >\n        <p className = {styles.description}>Note: If your collage has white, empty squares, you should try choosing smaller size</p>\n        {!token && (\n        <Button \n          link\n          href={`${oauthEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes}&response_type=token&show_dialog=true`}\n        >\n          Login to Spotify\n        </Button>\n      )}\n      {token && (\n        <SelectorContainer token = {token} playlists = {playlists}/>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './fonts/iCiel Gotham-Medium.ttf';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}